plugins {
    id 'java'
//    id 'net.nemerosa.versioning' version '2.14.0'
}

group 'edu.sgu'
version '1.0-SNAPSHOT'
//sourceCompatibility = 11
//targetCompatibility = 11


//create a single Jar with all dependencies
task calcJar(type: Jar, dependsOn: build) {
    manifest {
        attributes 'Implementation-Title': 'Calc cli 4 lab1',
//                'Implementation-Version': version,
                'Main-Class': 'edu.sgu.lab1.calc.Cli',
                'Class-Path': '../../repository/lib',
                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
//        'Build-Revision' : versioning.info.commit,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    }
    //baseName project.name + '-full'
    baseName "lab1Calc" + '-full'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
task bufJar(type: Jar, dependsOn: build) {
    manifest {
        attributes 'Implementation-Title': 'Buf cli 4 lab2',
//                'Implementation-Version': version,
                'Main-Class': 'edu.sgu.lab2.buffer.Cli',
                'Class-Path': '../../repository/lib',
                'Built-By'       : System.properties['user.name'],
                'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
//        'Build-Revision' : versioning.info.commit,
                'Created-By': "Gradle ${gradle.gradleVersion}",
                'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    }
    //baseName project.name + '-full'
    baseName "lab2buf" + '-full'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
/*jar {
    manifest {
        attributes 'Main-Class': 'edu.sgu.lab1.calc.Cli',
        'Class-Path': '../../repository/lib',
        'Built-By'       : System.properties['user.name'],
        'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
//        'Build-Revision' : versioning.info.commit,
        'Created-By': "Gradle ${gradle.gradleVersion}",
        'Build-Jdk': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
        'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
    }
}*/

repositories {
    flatDir {
        dirs '../../repository/lib'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
// https://mvnrepository.com/artifact/org.reflections/reflections
    compile ('org.reflections:reflections:0.9.12') {
        exclude group: "org.javassist", module: "javassist"
    }
// https://mvnrepository.com/artifact/org.javassist/javassist
    compile group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

defaultTasks 'calcJar', 'bufJar'

task runCalc(type: JavaExec, dependsOn: build){
    classpath sourceSets.main.runtimeClasspath
    main = 'edu.sgu.lab1.calc.Cli'
    args "b Z"
}

task runBuf(type: JavaExec, dependsOn: build){
    classpath sourceSets.main.runtimeClasspath
    main = 'edu.sgu.lab2.buffer.Cli'
}

task preClean(type: Delete) {
    delete fileTree("bufstore").matching {
        include "*"
    }
    followSymlinks = true
}

clean.dependsOn.add(preClean)

tasks.withType(JavaCompile) {
    //enable compilation in a separate daemon process
    options.fork = true
}